// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: httpsecurity.proto

package http_security

/*
Package apitrace provides data model for binary API trace informations.
*/

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Permissions          []string `protobuf:"bytes,3,rep,name=permissions" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_httpsecurity_db48c2918451fae2, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type PermissionGroup struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Urls                 []string `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionGroup) Reset()         { *m = PermissionGroup{} }
func (m *PermissionGroup) String() string { return proto.CompactTextString(m) }
func (*PermissionGroup) ProtoMessage()    {}
func (*PermissionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_httpsecurity_db48c2918451fae2, []int{1}
}
func (m *PermissionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionGroup.Unmarshal(m, b)
}
func (m *PermissionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionGroup.Marshal(b, m, deterministic)
}
func (dst *PermissionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionGroup.Merge(dst, src)
}
func (m *PermissionGroup) XXX_Size() int {
	return xxx_messageInfo_PermissionGroup.Size(m)
}
func (m *PermissionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionGroup proto.InternalMessageInfo

func (m *PermissionGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionGroup) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "http_security.User")
	proto.RegisterType((*PermissionGroup)(nil), "http_security.PermissionGroup")
}

func init() { proto.RegisterFile("httpsecurity.proto", fileDescriptor_httpsecurity_db48c2918451fae2) }

var fileDescriptor_httpsecurity_db48c2918451fae2 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x28, 0x29, 0x29,
	0x28, 0x4e, 0x4d, 0x2e, 0x2d, 0xca, 0x2c, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x05, 0x89, 0xc5, 0xc3, 0x04, 0x95, 0x22, 0xb8, 0x58, 0x42, 0x8b, 0x53, 0x8b, 0x84, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x29,
	0x2e, 0x8e, 0x82, 0xc4, 0xe2, 0xe2, 0xf2, 0xfc, 0xa2, 0x14, 0x09, 0x26, 0xb0, 0x38, 0x9c, 0x2f,
	0xa4, 0xc0, 0xc5, 0x5d, 0x90, 0x5a, 0x94, 0x9b, 0x59, 0x5c, 0x9c, 0x99, 0x9f, 0x57, 0x2c, 0xc1,
	0xac, 0xc0, 0xac, 0xc1, 0x19, 0x84, 0x2c, 0xa4, 0x64, 0xc9, 0xc5, 0x1f, 0x00, 0xe7, 0xba, 0x17,
	0xe5, 0x97, 0x16, 0x60, 0xb5, 0x44, 0x88, 0x8b, 0xa5, 0xb4, 0x28, 0xa7, 0x58, 0x82, 0x09, 0x6c,
	0x02, 0x98, 0x9d, 0xc4, 0x06, 0x76, 0xaa, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x77, 0xad, 0x16,
	0x78, 0xc0, 0x00, 0x00, 0x00,
}
